// Trafficlites - React Native App with Google Maps Directions API

import React, { useState, useEffect } from 'react'; import { View, StyleSheet, Text, Button, Alert } from 'react-native'; import MapView, { Marker } from 'react-native-maps'; import MapViewDirections from 'react-native-maps-directions'; import * as Location from 'expo-location';

const GOOGLE_MAPS_API_KEY = 'YOUR_GOOGLE_MAPS_API_KEY'; // Replace with your real key

export default function App() { const [location, setLocation] = useState(null); const [errorMsg, setErrorMsg] = useState(null); const [reportStatus, setReportStatus] = useState(''); const [selectedLight, setSelectedLight] = useState(null);

const trafficLights = [ { id: 1, title: 'Main & 1st Ave', coords: { latitude: -26.6505, longitude: 153.0908 }, status: 'green', }, { id: 2, title: 'Beach Rd & 2nd St', coords: { latitude: -26.6525, longitude: 153.0915 }, status: 'red', }, ];

useEffect(() => { (async () => { let { status } = await Location.requestForegroundPermissionsAsync(); if (status !== 'granted') { setErrorMsg('Permission to access location was denied'); return; }

let location = await Location.getCurrentPositionAsync({});
  setLocation(location.coords);
})();

}, []);

const reportLightStatus = (status) => { setReportStatus(status); Alert.alert('Reported', You reported: ${status.toUpperCase()} light); /* fetch('https://your-api-url/report', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ latitude: location.latitude, longitude: location.longitude, status: status, }), }); */ };

return ( <View style={styles.container}> {location ? ( <> <MapView style={styles.map} initialRegion={{ latitude: location.latitude, longitude: location.longitude, latitudeDelta: 0.01, longitudeDelta: 0.01, }} showsUserLocation={true} > {trafficLights.map((light) => ( <Marker key={light.id} coordinate={light.coords} title={light.title} description={Light is ${light.status}} pinColor={ light.status === 'green' ? 'green' : light.status === 'yellow' ? 'gold' : 'red' } onCalloutPress={() => setSelectedLight(light)} /> ))}

{selectedLight && (
          <MapViewDirections
            origin={location}
            destination={selectedLight.coords}
            apikey={GOOGLE_MAPS_API_KEY}
            strokeWidth={4}
            strokeColor="blue"
          />
        )}
      </MapView>

      <View style={styles.buttonContainer}>
        <Text style={styles.reportText}>Report Traffic Light:</Text>
        <View style={styles.buttonRow}>
          <Button title="Green" color="green" onPress={() => reportLightStatus('green')} />
          <Button title="Yellow" color="gold" onPress={() => reportLightStatus('yellow')} />
          <Button title="Red" color="red" onPress={() => reportLightStatus('red')} />
        </View>
        {reportStatus && <Text style={styles.status}>Last reported: {reportStatus.toUpperCase()}</Text>}
        {selectedLight && (
          <Text style={{ textAlign: 'center' }}>
            Navigating to: {selectedLight.title}
          </Text>
        )}
      </View>
    </>
  ) : (
    <Text>{errorMsg || 'Getting location...'}</Text>
  )}
</View>

); }

const styles = StyleSheet.create({ container: { flex: 1, }, map: { flex: 1, }, buttonContainer: { padding: 10, backgroundColor: '#fff', }, buttonRow: { flexDirection: 'row', justifyContent: 'space-around', marginVertical: 10, }, reportText: { textAlign: 'center', fontWeight: 'bold', }, status: { textAlign: 'center', fontStyle: 'italic', }, });

